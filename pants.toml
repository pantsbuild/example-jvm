# Copyright 2021 Pants project contributors.
# Licensed under the Apache License, Version 2.0 (see LICENSE).

[GLOBAL]
pants_version = "2.12.0"
backend_packages = [
  # This repository demonstrates a mix of Java and Scala, and so both backends are enabled. But each
  # backend can be used independently, so there is no need to expose Scala BUILD file
  # symbols if you have a pure-Java repository (or vice versa).
  #
  # Linters/formatters are also hosted in independent backends, to allow them to be independently
  # enabled.
  "pants.backend.experimental.java",
  "pants.backend.experimental.java.lint.google_java_format",
  "pants.backend.experimental.scala",
  "pants.backend.experimental.scala.lint.scalafmt",
]

[source]
# Pants supports many layouts of sources: from Maven/SBT style project-centric layouts, to
# monorepo layouts. In this case, we have a monorepo layout, with all sources under a `src`
# directory, organized by type.
#
# See https://www.pantsbuild.org/docs/source-roots for more information.
root_patterns = [
  "/src/*",
  "/tests/*",
]

[javac]
args = [
  "-deprecation",
  "-encoding UTF-8",
]

# Each resolve is associated with a single version of Scala. To support multiple Scala versions,
# use multiple resolves.
[scala.version_for_resolve]
jvm-default = "2.13.8"
"scala-2.12" = "2.12.15"

[scalac]
args = [
  "-deprecation",
  "-encoding UTF-8",
  # An option for the compiler plugin enabled below.
  "-P:acyclic:force",
]

# Globally enabled `scalac` plugins, which are defined as `scalac_plugin` targets. Each set of
# plugins is enabled for a specific resolve by specifying the name of the plugin. Pants
# will find the applicable `scalac_plugin` targets using those names.
[scalac.plugins_for_resolve]
jvm-default = "acyclic"
"scala-2.12" = "acyclic"

# Configure multiple resolves here. Each resolve is a complete classpath with jars fixed to
# specific version by a "lock file". The lock file for each resolve is specified by the
# --jvm-resolves option. To (re-)generate lock files, run `./pants generate-lockfiles`.
[jvm.resolves]
jvm-default = "3rdparty/jvm/default.lock"
"scala-2.12" = "3rdparty/jvm/scala-2.12.lock"

# Configure remote debugging options that will be used with `test --debug`.
[jvm]
debug_args = [
  "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005",
]

[anonymous-telemetry]
enabled = true
repo_id = "79B3C35A-85A9-41A4-AAA8-04484F41A8F7"
